part of 'target_operator.dart';

class _CodeQualityReport {
  static const _ignoredFiles =
      "**/*.freezed.dart,**/*g.dart,lib/config/**,assets/images/**,.firebase/**";

  static ProcessResult generateTestCoverageReport() =>
      Process.runSync('genhtml', ['coverage/lcov.info', '-o', 'coverage/html']);

  static void duplicateCodeReport(
    List<String> sourceDir,
    String reportName,
  ) {
    // Check if npm is installed
    ProcessResult result = Process.runSync('npm', ['--version']);

    if (result.exitCode != 0) {
      // If npm is not installed, print error message and exit
      log('Error: npm is not installed.');
      log('Please install Node.js and npm from https://nodejs.org/');
      exit(1);
    } else {
      // Check if jscpd is installed globally
      ProcessResult result = Process.runSync('npm', ['ls', '-g', 'jscpd']);
      String output = result.stdout.toString();

      if (!output.contains('jscpd')) {
        // If not found, install jscpd
        Process.runSync('npm', ['i', '-g', 'jscpd']);
        log('jscpd installed successfully.');
      } else {
        log('jscpd is already installed.');
      }

      Process.runSync('jscpd', [
        ...sourceDir,
        '--reporters',
        'html',
        '--ignore',
        _ignoredFiles,
        '--output',
        reportName,
        '--min-lines',
        '10',
      ]);
    }
  }

  static void removeCodeFromCoverage({List<String>? unchangedFiles}) {
    // Check if remove_from_coverage is installed globally
    ProcessResult result = Process.runSync('dart', ['pub', 'global', 'list']);
    String output = result.stdout.toString();

    if (!output.contains('remove_from_coverage')) {
      // If not found, install remove_from_coverage
      Process.runSync(
        'dart',
        ['pub', 'global', 'activate', 'remove_from_coverage'],
      );
      log('remove_from_coverage installed successfully.');
    }

    log('Removing autogenerated files for test coverage...');

    var args = [
      '-f',
      'coverage/lcov.info',
      '-r',
      r'\.g\.dart$',
    ];

    if (unchangedFiles != null && unchangedFiles.isNotEmpty) {
      args = args.map((file) => '-r $file').toList();
    }

    Process.runSync(
      'remove_from_coverage',
      args,
    );
  }
}
